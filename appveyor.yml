version: "1.0.{build}"
pull_requests:
  do_not_increment_build_number: true
image: Visual Studio 2022
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: "{version}"
  package_version: "{version}"
  assembly_version: "{version}"
  file_version: "{version}"
  informational_version: "{version}"
branches:
  only:
    - main
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
before_build:
  - cmd: dotnet --version
  - cmd: dotnet restore src/lobe.sln --verbosity q
build_script:
  - cmd: dotnet build src/lobe.sln
after_build:
  # For once the build has completed
  - cmd: dotnet pack src/lobe.OpenCvSharp/lobe.OpenCvSharp.csproj -o pacakges
  - cmd: dotnet pack src/lobe.ImageSharp/lobe.ImageSharp.csproj -o pacakges
  - cmd: dotnet pack src/lobe.Onnx/lobe.Onnx.csproj -o pacakges
  - cmd: dotnet pack src/lobe/lobe.csproj -o pacakges
  - cmd: dotnet pack src/lobe.Http/lobe.Http.csproj -o pacakges
artifacts:
  - path: "pacakges/**/*.nupkg"
    name: NugetPacakges

clone_depth: 1
test_script:
    - cmd: dotnet test src/lobe.sln
on_finish:
  # any cleanup in here
deploy:
  - provider: NuGet
    api_key:
      secure: uUD2MBb78rN0QEzlJ1ZgZ/XXv1ObL95yS5QHOOZLmfn1Hn4mUWH1EsYOTAyKG/cI
    skip_symbols: false
    artifact: /.*(\.|\.s)nupkg/
    on:
      branch: main
